// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "gui1.h"
static plc_connect *plc; 

void callback(void*) {
  mostrar_valor->value(plc->multiline_text());
    Fl::repeat_timeout(1.0, callback);
}

Fl_Double_Window *flt_window=(Fl_Double_Window *)0;

Fl_Input *vmemory=(Fl_Input *)0;

static void cb_add(Fl_Button*, void*) {
  plc->read_plc_add_dir(atoi(vmemory->value()),Vm_count->value());
}

static void cb_Start(Fl_Button*, void*) {
  //stop_plc_comunic();
plc->escribir_plc();
}

static void cb_Stop(Fl_Button*, void*) {
  //start_plc_comunic();
}

Fl_Spinner *Vm_count=(Fl_Spinner *)0;

Fl_Output *mostrar_valor=(Fl_Output *)0;

Fl_Double_Window* make_window(plc_connect *nplc) {
  plc=nplc;
  Fl::add_timeout(1.0, callback);
  { flt_window = new Fl_Double_Window(530, 680, "HRH Conect PLC");
    { vmemory = new Fl_Input(40, 110, 115, 40, "Vmemory");
      vmemory->align(Fl_Align(FL_ALIGN_TOP));
    } // Fl_Input* vmemory
    { Fl_Button* o = new Fl_Button(290, 100, 55, 40, "add");
      o->callback((Fl_Callback*)cb_add);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(50, 40, 85, 40, "Start");
      o->callback((Fl_Callback*)cb_Start);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(165, 40, 85, 40, "Stop");
      o->callback((Fl_Callback*)cb_Stop);
    } // Fl_Button* o
    { Vm_count = new Fl_Spinner(190, 115, 55, 25, "count");
      Vm_count->align(Fl_Align(FL_ALIGN_TOP));
    } // Fl_Spinner* Vm_count
    { mostrar_valor = new Fl_Output(115, 200, 340, 440, "Valores");
      mostrar_valor->type(12);
      mostrar_valor->align(Fl_Align(FL_ALIGN_TOP));
    } // Fl_Output* mostrar_valor
    flt_window->end();
  } // Fl_Double_Window* flt_window
  return flt_window;
}
